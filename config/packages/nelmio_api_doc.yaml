# config/packages/nelmio_api_doc.yaml
nelmio_api_doc:
    documentation:
        info:
            title: Wine API
            description: API for managing wine measurements
            version: 1.0.0
        paths:
            /api:
                get:
                    tags:
                        - API Check
                    summary: Check API
                    responses:
                        '200':
                            description: Successful response
            /api/login:
                post:
                    summary: API Login
                    description: Login to obtain an authentication token.
                    tags:
                        - User
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    properties:
                                        username:
                                            type: string
                                        password:
                                            type: string
                    responses:
                        '200':
                            description: Successful operation
                            content:
                                application/xml:
                                    schema:
                                        type: string
                                application/json:
                                    schema:
                                        type: string
                        '400':
                            description: Invalid username/password supplied

            /register:
                post:
                    summary: API Register new user
                    description: Creates a new user
                    tags:
                        - User
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    properties:
                                        username:
                                            type: string
                                        password:
                                            type: string
                    responses:
                        '201':
                            description: Successful operation
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            message:
                                                type: string
                                            userId:
                                                type: integer
                        '400':
                            description: Invalid data
                        '415':
                            description: Unsupported content type
            
            /logout:
                post:
                    description: User Logout
                    tags:
                        - User
            /api/sensor:
                post:
                    tags:
                        - Wine Management
                    summary: Register a new sensor
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    properties:
                                        name:
                                            type: string
                                            description: New sensor name
                    responses:
                        '201':
                            description: Sensor created successfully
                        '400':
                            description: Bad request
                        '401':
                            description: Unauthorized
            /api/sensor/{id}:
                delete:
                    tags:
                        - Wine Management
                    summary: Delete a sensor
                    parameters:
                        - name: id
                          in: path
                          required: true
                          description: The ID of the sensor to delete
                          schema:
                              type: integer
                    responses:
                        '200':
                            description: Sensor deleted successfully
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            status:
                                                type: string
                                                example: Sensor deleted successfully
                        '404':
                            description: Sensor not found
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: Sensor not found
                        '401':
                            description: Unauthorized
            /api/sensors:
                get:
                    tags:
                        - Wine Management
                    summary: Get sorted sensors
                    responses:
                        '200':
                            description: Successful response
                        '401':
                            description: Unauthorized

            /api/measurement:
                post:
                    tags:
                        - Wine Management
                    summary: Register a new measurement
                    requestBody:
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Measurement'
                    responses:
                        '201':
                            description: Measurement created successfully
                        '400':
                            description: Bad request
                        '401':
                            description: Unauthorized
            /api/measurement/{id}:
                delete:
                    tags:
                        - Wine Management
                    summary: Delete a measurement
                    parameters:
                        - name: id
                          in: path
                          required: true
                          description: The ID of the measurement to delete
                          schema:
                              type: integer
                    responses:
                        '200':
                            description: Measurement deleted successfully
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            status:
                                                type: string
                                                example: Measurement deleted successfully
                        '404':
                            description: Measurement not found
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: Measurement not found
                        '401':
                            description: Unauthorized

            /api/wines/measurements:
                get:
                    tags:
                        - Wine Management
                    summary: Get a list of wines with their measurements
                    description: "Returns a list of wines with their associated measurements"
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Measurement'
                        '400':
                            description: "Bad request"
                        '500':
                            description: "Server error"

        tags:
            - name: User
            - name: Wine Management
        components:
            schemas:
                Measurement:
                    type: object
                    properties:
                        year: { type: integer}
                        sensor_id: { type: integer}
                        wine_name: {type: string}
                        color: { type: string}
                        temperature: { type: number}
                        alcoholContent: { type: number}
                        ph: { type: number}


    areas:
        path_patterns:
            - ^/api(?!/doc$) # Matches any path starting with /api except /api/doc
